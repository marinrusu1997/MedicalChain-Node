"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
/**
 * EOSIO MongoDB Estimated Document Count
 *
 * @param {MongoClient} client MongoDB Client
 * @param {string} collectionName Collection Name
 * @param {object} [query={}] MongoDB Query
 * @param {object} [options={}] Optional Parameters
 * @param {number} [options.limit] Limit the maximum count
 * @param {number} [options.skip] Skips number of documents
 * @returns {Promise<Number>} Esimated Document Count
 * @example
 * const count = await estimatedDocumentCount(client, "actions", {account: "eosio"});
 * count //=> 160000
 */
function estimatedDocumentCount(client, collectionName, query = {}, options = {}) {
    const db = client.db("EOS");
    const collection = db.collection(collectionName);
    if (Object.keys(query).length) {
        return collection.countDocuments(query);
    }
    else {
        return collection.estimatedDocumentCount(query);
    }
    // return new Promise((resolve, reject) => {
    //     collection.estimatedDocumentCount(query, options, (error, count) => {
    //         if (error) { return reject(error); }
    //         return resolve(count);
    //     });
    // });
}
exports.estimatedDocumentCount = estimatedDocumentCount;
