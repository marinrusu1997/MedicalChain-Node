// Generated by https://quicktype.io
//
// To change quicktype's target language, run command:
//
//   "Set quicktype target language"

export interface TransactionTraces {
    _id:           string;
    id:            string;
    receipt:       TransactionTracesReceipt;
    elapsed:       number;
    net_usage:     number;
    scheduled:     boolean;
    action_traces: ActionTrace[];
    except:        null;
    createdAt:     string;
}

export interface ActionTrace {
    receipt:         InlineTraceReceipt;
    act:             ActionTraceAct;
    elapsed:         number;
    cpu_usage:       number;
    console:         string;
    total_cpu_usage: number;
    trx_id:          TrxID;
    inline_traces:   InlineTrace[];
}

export interface ActionTraceAct {
    account:       Account;
    name:          Name;
    authorization: Authorization[];
    data:          Data1;
    hex_data:      string;
}

export type Account = string;

export interface Authorization {
    actor:      Creator;
    permission: Permission;
}

export type Creator = string;

export type Permission = string;

export interface Data1 {
    creator?:            Creator;
    name?:               string;
    owner?:              Active;
    active?:             Active;
    payer?:              Creator;
    receiver?:           string;
    bytes?:              number;
    from?:               Creator;
    stake_net_quantity?: string;
    stake_cpu_quantity?: string;
    transfer?:           number;
    to?:                 string;
    quantity?:           Quantity;
    memo?:               Memo;
}

export interface Active {
    threshold: number;
    keys:      Key[];
    accounts:  any[];
    waits:     any[];
}

export interface Key {
    key:    string;
    weight: number;
}

export type Data = any;

export type Memo = string;

export type Quantity = string;

export type Name = string;

export interface InlineTrace {
    receipt:         InlineTraceReceipt;
    act:             InlineTraceAct;
    elapsed:         number;
    cpu_usage:       number;
    console:         string;
    total_cpu_usage: number;
    trx_id:          TrxID;
    inline_traces:   InlineTrace[];
}

export interface InlineTraceAct {
    account:       Account;
    name:          Name;
    authorization: Authorization[];
    data:          Data;
    hex_data:      string;
}

export interface InlineTraceReceipt {
    receiver:        string;
    act_digest:      string;
    global_sequence: number;
    recv_sequence:   number;
    auth_sequence:   Array<Array<Creator | number>>;
    code_sequence:   number;
    abi_sequence:    number;
}

export type TrxID = string;

export interface TransactionTracesReceipt {
    status:          string;
    cpu_usage_us:    number;
    net_usage_words: number;
}
